<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Login" width="1280" height="720" background="#fffbe6">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1280">
        <ImageViewer id="ImageViewer_login" taborder="0" left="612" top="145" width="58" height="56" background="url('theme://images/ico_map_03.png')"/>
        <Edit id="edt_id" taborder="1" left="509" top="ImageViewer_login:25" width="265" height="38" cssclass="edt_Login" text="아이디" displaynulltext="아이디" onkeyup="Edit_onkeyup"/>
        <Edit id="edt_password" taborder="2" left="509" top="edt_id:10" width="265" height="38" cssclass="edt_Login" displaynulltext="비밀번호" password="true" onkeyup="Edit_onkeyup"/>
        <Button id="btn_login" taborder="3" text="로그인" left="509" top="edt_password:25" width="265" height="38" cssclass="btn_Login" onclick="Button_onclick"/>
        <Static id="stt_signUp" taborder="4" text="회원이 아니신가요?" left="514" top="btn_login:20" width="106" height="20" cssclass="stt_SignUp"/>
        <Button id="btn_signUp" taborder="5" text="회원가입" left="719" top="btn_login:20" width="50" height="20" cssclass="btn_SignUp"/>
        <Static id="stt_line01" taborder="6" left="509" top="443" width="105" height="1" cssclass="stt_Line"/>
        <Static id="stt_line02" taborder="7" left="669" top="443" width="105" height="1" cssclass="stt_Line"/>
        <Static id="stt_or" taborder="8" text="or" left="635" top="433" width="12" height="20" cssclass="stt_Or"/>
        <Button id="btn_kakao" taborder="9" text="카카오 계정으로 로그인" left="509" top="stt_line01:25" width="265" height="38" cssclass="btn_Kakao"/>
        <Button id="btn_google" taborder="10" text="Google 계정으로 로그인" left="509" top="532" width="265" height="38" cssclass="btn_Google"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_login">
        <ColumnInfo>
          <Column id="USER_ID" type="STRING" size="256"/>
          <Column id="USER_PW" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/*
___________________________________________________________________________________________________
   @업무구분   :   시스템 - 업무 - 업무세부
   @작성자     :   이원모
   @작성일     :   2021.03.20
   @화면개요   :   로그인폼
___________________________________________________________________________________________________
   @수정이력   :
      수정일      |      수정자      |      수정내역
   -----------------------------------------------------------------------------------------------
___________________________________________________________________________________________________      
*/
//_________________________________________________________________________________________________
//
//      [ PART 1 ]
//      form 전역변수 선언 및 초기화(폼로드, 유효성, 콤보 설정)
//_________________________________________________________________________________________________
var FORM = this;
// 폼로드
this.form_onload = function() {

}
//_________________________________________________________________________________________________
//
//      [ PART 2 ]
//      CRUD 트랜잭션
//_________________________________________________________________________________________________
//로그인 트랜잭션
this.fn_search = function() {
	if(this.edt_id.value == undefined || this.edt_id.value == "" || this.edt_password.value == undefined || this.edt_password.value == "") {
		this.alert("아이디 또는 패스워드를 입력해주세요.")
	} else {
		this.ds_login.addRow()
		this.ds_login.setColumn(this.ds_login.rowposition, "USER_ID", this.edt_id.value);
		this.ds_login.setColumn(this.ds_login.rowposition, "USER_PW", this.edt_password.value);
		
		trace(this.ds_login.getColumn(this.ds_login.rowposition, "USER_ID"));
		trace(this.ds_login.getColumn(this.ds_login.rowposition, "USER_PW"));
	
		var id = "search";
		var url = "/test.jsp";
		var reqDs = "";
		var respDs = "ds_login=ds_login";
		var args = "";
		var callback = "received";

		this.transaction(id, url, reqDs, respDs, args, callback);
	}
}
//_________________________________________________________________________________________________
//
//      [ PART 3 ]
//      사용자 정의 함수
//_________________________________________________________________________________________________

//_________________________________________________________________________________________________
//
//      [ PART 4 ]
//      Callback 함수
//_________________________________________________________________________________________________
//로그인 콜백
this.received = function(id, code, message) {
	if (code == 0) {
	  this.alert(this.ds_login.rowcount + " numbers of data have been found.");
	  trace(this.ds_login.rowcount + " numbers of data have been found.");
	} else {
	  this.alert("Error["+code+"]:"+message);
	  trace("Error["+code+"]:"+message);
	}
}
//_________________________________________________________________________________________________
//
//      [ PART 5 ]
//      Component의 Event
//_________________________________________________________________________________________________
//버튼 이벤트
this.Button_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.fn_search();
};
//edit 이벤트
this.Edit_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo) {
	if(e.keycode != 13) return;
	switch(obj.name) {
	case "edt_id" :
		this.fn_search();
		break;
	case "edt_password" :
		this.fn_search();
		break;
	}
};]]></Script>
  </Form>
</FDL>
